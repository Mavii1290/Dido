ShopGridArea
import React, { useState } from "react";
import shop_data from "../../data/shop_data";
import ProductDetails from "@/components/shop/productDetails";

const ShoppingGrid = () => {
  const [itemsToShow, setItemsToShow] = useState(12);
  const [selectedProduct, setSelectedProduct] = useState(null);

  const handleItemsChange = (e) => {
    const value = e.target.value;
    setItemsToShow(value === "all" ? shop_data.length : parseInt(value));
  };

  const displayedProducts = shop_data.slice(0, itemsToShow);

  return (
    <section className="py-4">
      <div className="container shop-grid">
        {/* Sort Control */}
        <div className="d-flex justify-content-between align-items-center mb-4">
          <h4 className="mb-0">Shop Products</h4>
          <select
            value={itemsToShow}
            onChange={handleItemsChange}
            className="form-select w-auto"
          >
            <option value="12">Show 12</option>
            <option value="24">Show 24</option>
            <option value="48">Show 48</option>
            <option value="all">Show All</option>
          </select>
        </div>

        {/* Product Grid */}
        <div className="row g-4">
          {displayedProducts.map((product, i) => (
            <div
              key={i}
              className="col-6 col-md-4 col-lg-3"
              onClick={() => setSelectedProduct(product)}
              style={{ cursor: "pointer" }}
            >
              <div className="card h-100 text-center">
                <img
                  src={product.img}
                  alt={product.title}
                  className="card-img-top"
                  style={{ height: "150px", objectFit: "contain" }}
                />
                <div className="card-body">
                  {product.badge_text && (
                    <span
                      className={`badge bg-${product.badge_color || "secondary"} mb-2`}
                    >
                      {product.badge_text}
                    </span>
                  )}
                  <h6 className="card-title">{product.title}</h6>
                  <p className="card-text text-muted mb-1">
                    <del>${product.old_price}</del>{" "}
                    <strong>${product.new_price}</strong>
                  </p>
                  <button
                    className={`btn btn-${product.btn_color || "primary"} btn-sm`}
                  >
                    {product.btn_text}
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Details Overlay */}
      {selectedProduct && (
        <ProductDetails
          product={selectedProduct}
          onClose={() => setSelectedProduct(null)}
        />
      )}
    </section>
  );
};

export default ShoppingGrid;






import Link from "next/link";
import shop_data from "../../data/shop_data";
import NiceSelect from "../ui/NiceSelect";
import Image from "next/image";


const ShopGridArea = () => {
	const selectHandler = (e) => {};

	return (
		<>
			<div className="page-content-wrapper py-3">
				{/* <!-- Pagination --> */}
				<div className="shop-pagination pb-3">
					<div className="container">
						<div className="card">
							<div className="card-body p-2">
								<div className="d-flex align-items-center justify-content-between rk_style">
									<small className="ms-1">Showing 6 of 31</small>
									<form onSubmit={(e) => e.preventDefault()}>
										<NiceSelect
											className="pe-4 form-select d-flex align-items-center shop_grid_style"
											options={[
												{ value: "01", text: "Sort by Newest" },
												{ value: "02", text: "Sort by Older" },
												{ value: "03", text: "Sort by Ratings" },
												{ value: "04", text: "Sort by Sales" },
											]}
											defaultCurrent={0}
											onChange={selectHandler}
											placeholder="Select an option"
											name="myNiceSelect"
										/>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>

				{/* <!-- Top Products --> */}
				<div className="top-products-area">
					<div className="container">
						<div className="row g-3">
							{shop_data.map((item, i) => (
								<div key={i} className="col-6 col-sm-4 col-lg-3">
									<div className="card single-product-card">
										<div className="card-body p-3">
											{/* <!-- Product Thumbnail --> */}
											<Link
												className="product-thumbnail d-block"
												href="/shop-details"
											>
												<Image
												width={55}
												height={55}	
												src={item.img} alt={item.title} />
												{/* <!-- Badge --> */}
												<span className={`badge bg-${item.badge_colro}`}>
													{item.badge_text}
												</span>
											</Link>
											{/* <!-- Product Title --> */}
											<Link
												className="product-title d-block text-truncate"
												href="/shop-details"
											>
												{item.title}
											</Link>
											{/* <!-- Product Price --> */}
											<p className="sale-price">
												$ {item.new_price}
												<span>$ {item.old_price}</span>
											</p>
											<a
												className={`btn btn-${
													item.btn_color
												} rounded-pill btn-sm ${
													item.btn_color === "danger" ? "disabled" : ""
												}`}
												href="#"
											>
												{item.btn_text}
											</a>
										</div>
									</div>
								</div>
							))}
						</div>
					</div>
				</div>

				{/* <!-- Pagination --> */}
				<div className="shop-pagination pt-3">
					<div className="container">
						<div className="card">
							<div className="card-body py-3">
								<nav aria-label="Page navigation example">
									<ul className="pagination pagination-two justify-content-center">
										<li className="page-item">
											<a className="page-link" href="#" aria-label="Previous">
												<i className="bi bi-chevron-left"></i>
											</a>
										</li>
										<li className="page-item active">
											<a className="page-link" href="#">
												1
											</a>
										</li>
										<li className="page-item">
											<a className="page-link" href="#">
												2
											</a>
										</li>
										<li className="page-item">
											<a className="page-link" href="#">
												3
											</a>
										</li>
										<li className="page-item">
											<a className="page-link" href="#">
												...
											</a>
										</li>
										<li className="page-item">
											<a className="page-link" href="#">
												9
											</a>
										</li>
										<li className="page-item">
											<a className="page-link" href="#" aria-label="Next">
												<i className="bi bi-chevron-right"></i>
											</a>
										</li>
									</ul>
								</nav>
							</div>
						</div>
					</div>
				</div>
			</div>
		</>
	);
};

export default ShopGridArea;
